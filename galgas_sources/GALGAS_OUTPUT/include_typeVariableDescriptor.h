//---------------------------------------------------------------------------*
//                                                                           *
//                 File 'include_typeVariableDescriptor.h'                   *
//               Generated by version 0.14.0 (LL(1) grammar)                 *
//                     january 20th, 2005, at 12h4'35"                       *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_typeVariableDescriptor'                *
//                                                                           *
//---------------------------------------------------------------------------*

#ifndef typeVariableDescriptor_DEFINED
#define typeVariableDescriptor_DEFINED

#include "typeVariableDescriptor.h"

class cPtr_typeVariableDescriptor : public C_reference_count {
//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

  macro_typeVariableDescriptor
  public : virtual bool isBuilt (void) const = 0 ;
  public : virtual const char * message_variableDescriptorErrorMessage (void) const ;
  public : static const char * static_string_message_variableDescriptorErrorMessage (void) ;
} ;

#endif

