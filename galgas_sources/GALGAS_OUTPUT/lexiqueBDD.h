//---------------------------------------------------------------------------*
//                                                                           *
//                           File 'lexiqueBDD.h'                             *
//               Generated by version 0.14.0 (LL(1) grammar)                 *
//                     january 20th, 2005, at 12h4'34"                       *
//                                                                           *
// This program is free software; you can redistribute it and/or modify it   *
// under the terms of the GNU General Public License as published by the     *
// Free Software Foundation.                                                 *
//                                                                           *
// This program is distributed in the hope it will be useful, but WITHOUT    *
// ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or     *
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for  *
// more details.                                                             *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef lexiqueBDD_0_DEFINED
#define lexiqueBDD_0_DEFINED
#include "galgas/C_lexique.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Lexical scanner class                            *
//                                                                           *
//---------------------------------------------------------------------------*

class lexiqueBDD : public C_lexique {
// Terminal symbols enumeration
  public : enum {lexiqueBDD_1_,
  lexiqueBDD_1_nombre,
  lexiqueBDD_1_id,
  lexiqueBDD_1_string,
  lexiqueBDD_1_comp,
  lexiqueBDD_1__28,
  lexiqueBDD_1__29,
  lexiqueBDD_1__7B,
  lexiqueBDD_1__7D,
  lexiqueBDD_1__5B,
  lexiqueBDD_1__5D,
  lexiqueBDD_1__3A_3D,
  lexiqueBDD_1__3A,
  lexiqueBDD_1__2E,
  lexiqueBDD_1__2E_2E,
  lexiqueBDD_1__3A_3A,
  lexiqueBDD_1__2B_3D,
  lexiqueBDD_1__2D_3D,
  lexiqueBDD_1__2D_3E,
  lexiqueBDD_1__26,
  lexiqueBDD_1__7C,
  lexiqueBDD_1__7E,
  lexiqueBDD_1__2C,
  lexiqueBDD_1__3F,
  lexiqueBDD_1__21,
  lexiqueBDD_1__3B,
  lexiqueBDD_1__23,
  lexiqueBDD_1_cache,
  lexiqueBDD_1_map,
  lexiqueBDD_1_bdd,
  lexiqueBDD_1_domain,
  lexiqueBDD_1_bool,
  lexiqueBDD_1_record,
  lexiqueBDD_1_true,
  lexiqueBDD_1_false,
  lexiqueBDD_1_display,
  lexiqueBDD_1_include,
  lexiqueBDD_1_dump,
  lexiqueBDD_1_verify,
  lexiqueBDD_1_end,
  lexiqueBDD_1_if,
  lexiqueBDD_1_then,
  lexiqueBDD_1_else,
  lexiqueBDD_1_dimension} ;

//--- Key words table 'delimiteursKerBDD'
  public : static const sint16 lexiqueBDD_table_size_delimiteursKerBDD ;
  private : static const C_lexique_table_entry lexiqueBDD_table_for_delimiteursKerBDD [22] ;
  public : static sint16 search_into_delimiteursKerBDD (const C_string & inSearchedString) ;

//--- Key words table 'motsReservesKerBDD'
  public : static const sint16 lexiqueBDD_table_size_motsReservesKerBDD ;
  private : static const C_lexique_table_entry lexiqueBDD_table_for_motsReservesKerBDD [17] ;
  public : static sint16 search_into_motsReservesKerBDD (const C_string & inSearchedString) ;

  protected : virtual void parseLexicalToken (const bool inPropagateLexicaleErrorException) ;
  protected : virtual void appendTerminalMessageToSyntaxErrorMessage (const sint16 numeroTerminal,
                                                              C_string & messageErreur) ;

//--- Constructor
  public : lexiqueBDD (AC_galgas_io * inGalgasInputOutput) ;
  public : C_string att_idf ; // user defined attribute
  public : C_string att_token ; // user defined attribute
  public : uint32 att_valeur ; // user defined attribute
  public : virtual sint16 getTerminalVocabularyCount_ (void) const { return 43 ; }

  public : static sint32 getStylesCount (void) ;
  public : static const char * getStyleName (const sint32 inIndex) ;
//--- Virtual method called getting terminal style index
  public : virtual uint8 getTerminalStyleIndex (const sint32 inTerminal) ;
} ;

//---------------------------------------------------------------------------*

#endif
