//---------------------------------------------------------------------------*
//                                                                           *
//                         File 'grammaireBDD.cpp'                           *
//                 Generated by version GALGAS_BETA_VERSION                  *
//                     november 1st, 2010, at 19h17'53"                      *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER
  #error "This file has been compiled with a version of GALGAS that uses libpm version VERSION_OF_LIBPM_USED_BY_GALGAS_COMPILER, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include "utilities/MF_MemoryControl.h"

//---------------------------------------------------------------------------*

#include "grammaireBDD.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//              L L ( 1 )    P R O D U C T I O N    R U L E S                *
//                                                                           *
//---------------------------------------------------------------------------*

#define TERMINAL(t)     ((t)+1)
#define NONTERMINAL(nt) ((-nt)-1)
#define END_PRODUCTION  (0)

static const PMSInt16 gProductions [] = {
// At index 0 : <axiomeBDD>, in file 'syntaxeBDD.ggs', line 121
  NONTERMINAL (14) // <select_syntaxeBDD_0>
, TERMINAL (C_Lexique_lexiqueBDD::kToken_end) // $end$
, END_PRODUCTION
// At index 3 : <domainDefinition>, in file 'syntaxeBDD.ggs', line 224
, NONTERMINAL (15) // <select_syntaxeBDD_1>
, END_PRODUCTION
// At index 5 : <formule>, in file 'syntaxeBDD.ggs', line 543
, NONTERMINAL (4) // <egalite_formule>
, NONTERMINAL (23) // <select_syntaxeBDD_9>
, END_PRODUCTION
// At index 8 : <type_formule>, in file 'syntaxeBDD.ggs', line 454
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3A__3D_) // $:=$
, NONTERMINAL (2) // <formule>
, END_PRODUCTION
// At index 11 : <type_formule>, in file 'syntaxeBDD.ggs', line 482
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2B__3D_) // $+=$
, NONTERMINAL (2) // <formule>
, END_PRODUCTION
// At index 14 : <type_formule>, in file 'syntaxeBDD.ggs', line 511
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2D__3D_) // $-=$
, NONTERMINAL (2) // <formule>
, END_PRODUCTION
// At index 17 : <egalite_formule>, in file 'syntaxeBDD.ggs', line 590
, NONTERMINAL (6) // <terme_formule>
, NONTERMINAL (24) // <select_syntaxeBDD_10>
, END_PRODUCTION
// At index 20 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 657
, TERMINAL (C_Lexique_lexiqueBDD::kToken__28_) // $($
, NONTERMINAL (2) // <formule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__29_) // $)$
, END_PRODUCTION
// At index 24 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 677
, TERMINAL (C_Lexique_lexiqueBDD::kToken_true) // $true$
, END_PRODUCTION
// At index 26 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 690
, TERMINAL (C_Lexique_lexiqueBDD::kToken__7B_) // ${$
, NONTERMINAL (12) // <parse_scalar_argument>
, TERMINAL (C_Lexique_lexiqueBDD::kToken_comp) // $comp$
, NONTERMINAL (8) // <comparaisonVariable>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__7D_) // $}$
, END_PRODUCTION
// At index 32 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 756
, TERMINAL (C_Lexique_lexiqueBDD::kToken_false) // $false$
, END_PRODUCTION
// At index 34 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 769
, TERMINAL (C_Lexique_lexiqueBDD::kToken__7E_) // $~$
, NONTERMINAL (5) // <facteur_formule>
, END_PRODUCTION
// At index 37 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 790
, TERMINAL (C_Lexique_lexiqueBDD::kToken_if) // $if$
, NONTERMINAL (2) // <formule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken_then) // $then$
, NONTERMINAL (2) // <formule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken_else) // $else$
, NONTERMINAL (2) // <formule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken_end) // $end$
, END_PRODUCTION
// At index 45 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 830
, TERMINAL (C_Lexique_lexiqueBDD::kToken__21_) // $!$
, NONTERMINAL (11) // <declarations>
, NONTERMINAL (5) // <facteur_formule>
, END_PRODUCTION
// At index 49 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 864
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3F_) // $?$
, NONTERMINAL (11) // <declarations>
, NONTERMINAL (5) // <facteur_formule>
, END_PRODUCTION
// At index 53 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 895
, NONTERMINAL (12) // <parse_scalar_argument>
, END_PRODUCTION
// At index 55 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 914
, TERMINAL (C_Lexique_lexiqueBDD::kToken__23_) // $#$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5B_) // $[$
, NONTERMINAL (13) // <parse_argument>
, NONTERMINAL (26) // <select_syntaxeBDD_12>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5D_) // $]$
, END_PRODUCTION
// At index 62 : <terme_formule>, in file 'syntaxeBDD.ggs', line 624
, NONTERMINAL (5) // <facteur_formule>
, NONTERMINAL (25) // <select_syntaxeBDD_11>
, END_PRODUCTION
// At index 65 : <dimension>, in file 'syntaxeBDD.ggs', line 423
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3A_) // $:$
, NONTERMINAL (21) // <select_syntaxeBDD_7>
, END_PRODUCTION
// At index 68 : <comparaisonVariable>, in file 'syntaxeBDD.ggs', line 716
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, END_PRODUCTION
// At index 70 : <comparaisonVariable>, in file 'syntaxeBDD.ggs', line 733
, NONTERMINAL (12) // <parse_scalar_argument>
, END_PRODUCTION
// At index 72 : <analyserFormule>, in file 'syntaxeBDD.ggs', line 278
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, NONTERMINAL (10) // <argsFormelsFormule>
, NONTERMINAL (3) // <type_formule>
, END_PRODUCTION
// At index 76 : <argsFormelsFormule>, in file 'syntaxeBDD.ggs', line 313
, NONTERMINAL (19) // <select_syntaxeBDD_5>
, END_PRODUCTION
// At index 78 : <declarations>, in file 'syntaxeBDD.ggs', line 365
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, NONTERMINAL (7) // <dimension>
, NONTERMINAL (20) // <select_syntaxeBDD_6>
, END_PRODUCTION
// At index 82 : <parse_scalar_argument>, in file 'syntaxeBDD.ggs', line 982
, NONTERMINAL (13) // <parse_argument>
, END_PRODUCTION
// At index 84 : <parse_argument>, in file 'syntaxeBDD.ggs', line 956
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, NONTERMINAL (27) // <select_syntaxeBDD_13>
, END_PRODUCTION
//---- Added productions from 'select' and 'repeat' instructions
// At index 87 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, END_PRODUCTION
// At index 88 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_domain) // $domain$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3A_) // $:$
, NONTERMINAL (1) // <domainDefinition>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 95 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_include) // $include$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_string) // $string$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 100 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_use_5F_and) // $use_and$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 104 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_use_5F_ite) // $use_ite$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 108 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_use_5F_and_5F_ite) // $use_and_ite$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 112 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_and_5F_cache) // $and_cache$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 117 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_ite_5F_cache) // $ite_cache$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 122 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_map) // $map$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 127 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_bdd) // $bdd$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 131 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_display) // $display$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__23_) // $#$
, NONTERMINAL (9) // <analyserFormule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 137 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_dump) // $dump$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__23_) // $#$
, NONTERMINAL (9) // <analyserFormule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 143 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken_verify) // $verify$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__23_) // $#$
, NONTERMINAL (9) // <analyserFormule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 149 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
, TERMINAL (C_Lexique_lexiqueBDD::kToken__23_) // $#$
, NONTERMINAL (9) // <analyserFormule>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (14) // <select_syntaxeBDD_0>
, END_PRODUCTION
// At index 154 : <select_syntaxeBDD_1>, in file 'syntaxeBDD.ggs', line 229
, NONTERMINAL (16) // <select_syntaxeBDD_2>
, END_PRODUCTION
// At index 156 : <select_syntaxeBDD_1>, in file 'syntaxeBDD.ggs', line 229
, TERMINAL (C_Lexique_lexiqueBDD::kToken_record) // $record$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3A_) // $:$
, NONTERMINAL (1) // <domainDefinition>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (18) // <select_syntaxeBDD_4>
, TERMINAL (C_Lexique_lexiqueBDD::kToken_end) // $end$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_record) // $record$
, END_PRODUCTION
// At index 165 : <select_syntaxeBDD_1>, in file 'syntaxeBDD.ggs', line 229
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, END_PRODUCTION
// At index 167 : <select_syntaxeBDD_2>, in file 'syntaxeBDD.ggs', line 232
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2E__2E_) // $..$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, END_PRODUCTION
// At index 171 : <select_syntaxeBDD_2>, in file 'syntaxeBDD.ggs', line 232
, TERMINAL (C_Lexique_lexiqueBDD::kToken_bool) // $bool$
, NONTERMINAL (17) // <select_syntaxeBDD_3>
, END_PRODUCTION
// At index 174 : <select_syntaxeBDD_3>, in file 'syntaxeBDD.ggs', line 239
, END_PRODUCTION
// At index 175 : <select_syntaxeBDD_3>, in file 'syntaxeBDD.ggs', line 239
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5B_) // $[$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5D_) // $]$
, END_PRODUCTION
// At index 179 : <select_syntaxeBDD_4>, in file 'syntaxeBDD.ggs', line 255
, END_PRODUCTION
// At index 180 : <select_syntaxeBDD_4>, in file 'syntaxeBDD.ggs', line 255
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3A_) // $:$
, NONTERMINAL (1) // <domainDefinition>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__3B_) // $;$
, NONTERMINAL (18) // <select_syntaxeBDD_4>
, END_PRODUCTION
// At index 186 : <select_syntaxeBDD_5>, in file 'syntaxeBDD.ggs', line 323
, END_PRODUCTION
// At index 187 : <select_syntaxeBDD_5>, in file 'syntaxeBDD.ggs', line 323
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5B_) // $[$
, NONTERMINAL (11) // <declarations>
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5D_) // $]$
, END_PRODUCTION
// At index 191 : <select_syntaxeBDD_6>, in file 'syntaxeBDD.ggs', line 373
, END_PRODUCTION
// At index 192 : <select_syntaxeBDD_6>, in file 'syntaxeBDD.ggs', line 373
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2C_) // $,$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, NONTERMINAL (7) // <dimension>
, NONTERMINAL (20) // <select_syntaxeBDD_6>
, END_PRODUCTION
// At index 197 : <select_syntaxeBDD_7>, in file 'syntaxeBDD.ggs', line 429
, TERMINAL (C_Lexique_lexiqueBDD::kToken_bool) // $bool$
, NONTERMINAL (22) // <select_syntaxeBDD_8>
, END_PRODUCTION
// At index 200 : <select_syntaxeBDD_7>, in file 'syntaxeBDD.ggs', line 429
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, END_PRODUCTION
// At index 202 : <select_syntaxeBDD_8>, in file 'syntaxeBDD.ggs', line 434
, END_PRODUCTION
// At index 203 : <select_syntaxeBDD_8>, in file 'syntaxeBDD.ggs', line 434
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5B_) // $[$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_nombre) // $nombre$
, TERMINAL (C_Lexique_lexiqueBDD::kToken__5D_) // $]$
, END_PRODUCTION
// At index 207 : <select_syntaxeBDD_9>, in file 'syntaxeBDD.ggs', line 558
, END_PRODUCTION
// At index 208 : <select_syntaxeBDD_9>, in file 'syntaxeBDD.ggs', line 558
, TERMINAL (C_Lexique_lexiqueBDD::kToken_comp) // $comp$
, NONTERMINAL (4) // <egalite_formule>
, NONTERMINAL (23) // <select_syntaxeBDD_9>
, END_PRODUCTION
// At index 212 : <select_syntaxeBDD_9>, in file 'syntaxeBDD.ggs', line 558
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2D__3E_) // $->$
, NONTERMINAL (4) // <egalite_formule>
, NONTERMINAL (23) // <select_syntaxeBDD_9>
, END_PRODUCTION
// At index 216 : <select_syntaxeBDD_10>, in file 'syntaxeBDD.ggs', line 605
, END_PRODUCTION
// At index 217 : <select_syntaxeBDD_10>, in file 'syntaxeBDD.ggs', line 605
, TERMINAL (C_Lexique_lexiqueBDD::kToken__7C_) // $|$
, NONTERMINAL (6) // <terme_formule>
, NONTERMINAL (24) // <select_syntaxeBDD_10>
, END_PRODUCTION
// At index 221 : <select_syntaxeBDD_11>, in file 'syntaxeBDD.ggs', line 638
, END_PRODUCTION
// At index 222 : <select_syntaxeBDD_11>, in file 'syntaxeBDD.ggs', line 638
, TERMINAL (C_Lexique_lexiqueBDD::kToken__26_) // $&$
, NONTERMINAL (5) // <facteur_formule>
, NONTERMINAL (25) // <select_syntaxeBDD_11>
, END_PRODUCTION
// At index 226 : <select_syntaxeBDD_12>, in file 'syntaxeBDD.ggs', line 930
, END_PRODUCTION
// At index 227 : <select_syntaxeBDD_12>, in file 'syntaxeBDD.ggs', line 930
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2C_) // $,$
, NONTERMINAL (13) // <parse_argument>
, NONTERMINAL (26) // <select_syntaxeBDD_12>
, END_PRODUCTION
// At index 231 : <select_syntaxeBDD_13>, in file 'syntaxeBDD.ggs', line 966
, END_PRODUCTION
// At index 232 : <select_syntaxeBDD_13>, in file 'syntaxeBDD.ggs', line 966
, TERMINAL (C_Lexique_lexiqueBDD::kToken__2E_) // $.$
, TERMINAL (C_Lexique_lexiqueBDD::kToken_id) // $id$
, NONTERMINAL (27) // <select_syntaxeBDD_13>
, END_PRODUCTION
// At index 236 : <>, in file '.ggs', line 0
, NONTERMINAL (0) // <axiomeBDD>
, END_PRODUCTION
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     P R O D U C T I O N    N A M E S                      *
//                                                                           *
//---------------------------------------------------------------------------*

static const cProductionNameDescriptor gProductionNames [69] = {
 {"<axiomeBDD>", "syntaxeBDD", 0}, // at index 0
 {"<domainDefinition>", "syntaxeBDD", 3}, // at index 1
 {"<formule>", "syntaxeBDD", 5}, // at index 2
 {"<type_formule>", "syntaxeBDD", 8}, // at index 3
 {"<type_formule>", "syntaxeBDD", 11}, // at index 4
 {"<type_formule>", "syntaxeBDD", 14}, // at index 5
 {"<egalite_formule>", "syntaxeBDD", 17}, // at index 6
 {"<facteur_formule>", "syntaxeBDD", 20}, // at index 7
 {"<facteur_formule>", "syntaxeBDD", 24}, // at index 8
 {"<facteur_formule>", "syntaxeBDD", 26}, // at index 9
 {"<facteur_formule>", "syntaxeBDD", 32}, // at index 10
 {"<facteur_formule>", "syntaxeBDD", 34}, // at index 11
 {"<facteur_formule>", "syntaxeBDD", 37}, // at index 12
 {"<facteur_formule>", "syntaxeBDD", 45}, // at index 13
 {"<facteur_formule>", "syntaxeBDD", 49}, // at index 14
 {"<facteur_formule>", "syntaxeBDD", 53}, // at index 15
 {"<facteur_formule>", "syntaxeBDD", 55}, // at index 16
 {"<terme_formule>", "syntaxeBDD", 62}, // at index 17
 {"<dimension>", "syntaxeBDD", 65}, // at index 18
 {"<comparaisonVariable>", "syntaxeBDD", 68}, // at index 19
 {"<comparaisonVariable>", "syntaxeBDD", 70}, // at index 20
 {"<analyserFormule>", "syntaxeBDD", 72}, // at index 21
 {"<argsFormelsFormule>", "syntaxeBDD", 76}, // at index 22
 {"<declarations>", "syntaxeBDD", 78}, // at index 23
 {"<parse_scalar_argument>", "syntaxeBDD", 82}, // at index 24
 {"<parse_argument>", "syntaxeBDD", 84}, // at index 25
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 87}, // at index 26
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 88}, // at index 27
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 95}, // at index 28
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 100}, // at index 29
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 104}, // at index 30
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 108}, // at index 31
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 112}, // at index 32
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 117}, // at index 33
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 122}, // at index 34
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 127}, // at index 35
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 131}, // at index 36
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 137}, // at index 37
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 143}, // at index 38
 {"<select_syntaxeBDD_0>", "syntaxeBDD", 149}, // at index 39
 {"<select_syntaxeBDD_1>", "syntaxeBDD", 154}, // at index 40
 {"<select_syntaxeBDD_1>", "syntaxeBDD", 156}, // at index 41
 {"<select_syntaxeBDD_1>", "syntaxeBDD", 165}, // at index 42
 {"<select_syntaxeBDD_2>", "syntaxeBDD", 167}, // at index 43
 {"<select_syntaxeBDD_2>", "syntaxeBDD", 171}, // at index 44
 {"<select_syntaxeBDD_3>", "syntaxeBDD", 174}, // at index 45
 {"<select_syntaxeBDD_3>", "syntaxeBDD", 175}, // at index 46
 {"<select_syntaxeBDD_4>", "syntaxeBDD", 179}, // at index 47
 {"<select_syntaxeBDD_4>", "syntaxeBDD", 180}, // at index 48
 {"<select_syntaxeBDD_5>", "syntaxeBDD", 186}, // at index 49
 {"<select_syntaxeBDD_5>", "syntaxeBDD", 187}, // at index 50
 {"<select_syntaxeBDD_6>", "syntaxeBDD", 191}, // at index 51
 {"<select_syntaxeBDD_6>", "syntaxeBDD", 192}, // at index 52
 {"<select_syntaxeBDD_7>", "syntaxeBDD", 197}, // at index 53
 {"<select_syntaxeBDD_7>", "syntaxeBDD", 200}, // at index 54
 {"<select_syntaxeBDD_8>", "syntaxeBDD", 202}, // at index 55
 {"<select_syntaxeBDD_8>", "syntaxeBDD", 203}, // at index 56
 {"<select_syntaxeBDD_9>", "syntaxeBDD", 207}, // at index 57
 {"<select_syntaxeBDD_9>", "syntaxeBDD", 208}, // at index 58
 {"<select_syntaxeBDD_9>", "syntaxeBDD", 212}, // at index 59
 {"<select_syntaxeBDD_10>", "syntaxeBDD", 216}, // at index 60
 {"<select_syntaxeBDD_10>", "syntaxeBDD", 217}, // at index 61
 {"<select_syntaxeBDD_11>", "syntaxeBDD", 221}, // at index 62
 {"<select_syntaxeBDD_11>", "syntaxeBDD", 222}, // at index 63
 {"<select_syntaxeBDD_12>", "syntaxeBDD", 226}, // at index 64
 {"<select_syntaxeBDD_12>", "syntaxeBDD", 227}, // at index 65
 {"<select_syntaxeBDD_13>", "syntaxeBDD", 231}, // at index 66
 {"<select_syntaxeBDD_13>", "syntaxeBDD", 232}, // at index 67
 {"<>", "", 236} // at index 68
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//            L L ( 1 )    P R O D U C T I O N    I N D E X E S              *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gProductionIndexes [69] = {
0, // index 0 : <axiomeBDD>, in file 'syntaxeBDD.ggs', line 121
3, // index 1 : <domainDefinition>, in file 'syntaxeBDD.ggs', line 224
5, // index 2 : <formule>, in file 'syntaxeBDD.ggs', line 543
8, // index 3 : <type_formule>, in file 'syntaxeBDD.ggs', line 454
11, // index 4 : <type_formule>, in file 'syntaxeBDD.ggs', line 482
14, // index 5 : <type_formule>, in file 'syntaxeBDD.ggs', line 511
17, // index 6 : <egalite_formule>, in file 'syntaxeBDD.ggs', line 590
20, // index 7 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 657
24, // index 8 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 677
26, // index 9 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 690
32, // index 10 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 756
34, // index 11 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 769
37, // index 12 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 790
45, // index 13 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 830
49, // index 14 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 864
53, // index 15 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 895
55, // index 16 : <facteur_formule>, in file 'syntaxeBDD.ggs', line 914
62, // index 17 : <terme_formule>, in file 'syntaxeBDD.ggs', line 624
65, // index 18 : <dimension>, in file 'syntaxeBDD.ggs', line 423
68, // index 19 : <comparaisonVariable>, in file 'syntaxeBDD.ggs', line 716
70, // index 20 : <comparaisonVariable>, in file 'syntaxeBDD.ggs', line 733
72, // index 21 : <analyserFormule>, in file 'syntaxeBDD.ggs', line 278
76, // index 22 : <argsFormelsFormule>, in file 'syntaxeBDD.ggs', line 313
78, // index 23 : <declarations>, in file 'syntaxeBDD.ggs', line 365
82, // index 24 : <parse_scalar_argument>, in file 'syntaxeBDD.ggs', line 982
84, // index 25 : <parse_argument>, in file 'syntaxeBDD.ggs', line 956
87, // index 26 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
88, // index 27 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
95, // index 28 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
100, // index 29 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
104, // index 30 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
108, // index 31 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
112, // index 32 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
117, // index 33 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
122, // index 34 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
127, // index 35 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
131, // index 36 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
137, // index 37 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
143, // index 38 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
149, // index 39 : <select_syntaxeBDD_0>, in file 'syntaxeBDD.ggs', line 127
154, // index 40 : <select_syntaxeBDD_1>, in file 'syntaxeBDD.ggs', line 229
156, // index 41 : <select_syntaxeBDD_1>, in file 'syntaxeBDD.ggs', line 229
165, // index 42 : <select_syntaxeBDD_1>, in file 'syntaxeBDD.ggs', line 229
167, // index 43 : <select_syntaxeBDD_2>, in file 'syntaxeBDD.ggs', line 232
171, // index 44 : <select_syntaxeBDD_2>, in file 'syntaxeBDD.ggs', line 232
174, // index 45 : <select_syntaxeBDD_3>, in file 'syntaxeBDD.ggs', line 239
175, // index 46 : <select_syntaxeBDD_3>, in file 'syntaxeBDD.ggs', line 239
179, // index 47 : <select_syntaxeBDD_4>, in file 'syntaxeBDD.ggs', line 255
180, // index 48 : <select_syntaxeBDD_4>, in file 'syntaxeBDD.ggs', line 255
186, // index 49 : <select_syntaxeBDD_5>, in file 'syntaxeBDD.ggs', line 323
187, // index 50 : <select_syntaxeBDD_5>, in file 'syntaxeBDD.ggs', line 323
191, // index 51 : <select_syntaxeBDD_6>, in file 'syntaxeBDD.ggs', line 373
192, // index 52 : <select_syntaxeBDD_6>, in file 'syntaxeBDD.ggs', line 373
197, // index 53 : <select_syntaxeBDD_7>, in file 'syntaxeBDD.ggs', line 429
200, // index 54 : <select_syntaxeBDD_7>, in file 'syntaxeBDD.ggs', line 429
202, // index 55 : <select_syntaxeBDD_8>, in file 'syntaxeBDD.ggs', line 434
203, // index 56 : <select_syntaxeBDD_8>, in file 'syntaxeBDD.ggs', line 434
207, // index 57 : <select_syntaxeBDD_9>, in file 'syntaxeBDD.ggs', line 558
208, // index 58 : <select_syntaxeBDD_9>, in file 'syntaxeBDD.ggs', line 558
212, // index 59 : <select_syntaxeBDD_9>, in file 'syntaxeBDD.ggs', line 558
216, // index 60 : <select_syntaxeBDD_10>, in file 'syntaxeBDD.ggs', line 605
217, // index 61 : <select_syntaxeBDD_10>, in file 'syntaxeBDD.ggs', line 605
221, // index 62 : <select_syntaxeBDD_11>, in file 'syntaxeBDD.ggs', line 638
222, // index 63 : <select_syntaxeBDD_11>, in file 'syntaxeBDD.ggs', line 638
226, // index 64 : <select_syntaxeBDD_12>, in file 'syntaxeBDD.ggs', line 930
227, // index 65 : <select_syntaxeBDD_12>, in file 'syntaxeBDD.ggs', line 930
231, // index 66 : <select_syntaxeBDD_13>, in file 'syntaxeBDD.ggs', line 966
232, // index 67 : <select_syntaxeBDD_13>, in file 'syntaxeBDD.ggs', line 966
236 // index 68 : <>, in file '.ggs', line 0
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//      L L ( 1 )    F I R S T    P R O D U C T I O N    I N D E X E S       *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gFirstProductionIndexes [30] = {
0, // at 0 : <axiomeBDD>
1, // at 1 : <domainDefinition>
2, // at 2 : <formule>
3, // at 3 : <type_formule>
6, // at 4 : <egalite_formule>
7, // at 5 : <facteur_formule>
17, // at 6 : <terme_formule>
18, // at 7 : <dimension>
19, // at 8 : <comparaisonVariable>
21, // at 9 : <analyserFormule>
22, // at 10 : <argsFormelsFormule>
23, // at 11 : <declarations>
24, // at 12 : <parse_scalar_argument>
25, // at 13 : <parse_argument>
26, // at 14 : <select_syntaxeBDD_0>
40, // at 15 : <select_syntaxeBDD_1>
43, // at 16 : <select_syntaxeBDD_2>
45, // at 17 : <select_syntaxeBDD_3>
47, // at 18 : <select_syntaxeBDD_4>
49, // at 19 : <select_syntaxeBDD_5>
51, // at 20 : <select_syntaxeBDD_6>
53, // at 21 : <select_syntaxeBDD_7>
55, // at 22 : <select_syntaxeBDD_8>
57, // at 23 : <select_syntaxeBDD_9>
60, // at 24 : <select_syntaxeBDD_10>
62, // at 25 : <select_syntaxeBDD_11>
64, // at 26 : <select_syntaxeBDD_12>
66, // at 27 : <select_syntaxeBDD_13>
68, // at 28 : <>
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               L L ( 1 )    D E C I S I O N    T A B L E S                 *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gDecision [] = {
// At index 0 : <axiomeBDD> only one production, no choice
  -1,
// At index 1 : <domainDefinition> only one production, no choice
  -1,
// At index 2 : <formule> only one production, no choice
  -1,
// At index 3 : <type_formule>
C_Lexique_lexiqueBDD::kToken__3A__3D_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__2B__3D_, -1, // Choice 2
C_Lexique_lexiqueBDD::kToken__2D__3D_, -1, // Choice 3
  -1,
// At index 10 : <egalite_formule> only one production, no choice
  -1,
// At index 11 : <facteur_formule>
C_Lexique_lexiqueBDD::kToken__28_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_true, -1, // Choice 2
C_Lexique_lexiqueBDD::kToken__7B_, -1, // Choice 3
C_Lexique_lexiqueBDD::kToken_false, -1, // Choice 4
C_Lexique_lexiqueBDD::kToken__7E_, -1, // Choice 5
C_Lexique_lexiqueBDD::kToken_if, -1, // Choice 6
C_Lexique_lexiqueBDD::kToken__21_, -1, // Choice 7
C_Lexique_lexiqueBDD::kToken__3F_, -1, // Choice 8
C_Lexique_lexiqueBDD::kToken_id, -1, // Choice 9
C_Lexique_lexiqueBDD::kToken__23_, -1, // Choice 10
  -1,
// At index 32 : <terme_formule> only one production, no choice
  -1,
// At index 33 : <dimension> only one production, no choice
  -1,
// At index 34 : <comparaisonVariable>
C_Lexique_lexiqueBDD::kToken_nombre, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_id, -1, // Choice 2
  -1,
// At index 39 : <analyserFormule> only one production, no choice
  -1,
// At index 40 : <argsFormelsFormule> only one production, no choice
  -1,
// At index 41 : <declarations> only one production, no choice
  -1,
// At index 42 : <parse_scalar_argument> only one production, no choice
  -1,
// At index 43 : <parse_argument> only one production, no choice
  -1,
//---- Added non terminal symbols from 'select' and 'repeat' instructions
// At index 44 : <select_syntaxeBDD_0>
C_Lexique_lexiqueBDD::kToken_end, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_domain, -1, // Choice 2
C_Lexique_lexiqueBDD::kToken_include, -1, // Choice 3
C_Lexique_lexiqueBDD::kToken_use_5F_and, -1, // Choice 4
C_Lexique_lexiqueBDD::kToken_use_5F_ite, -1, // Choice 5
C_Lexique_lexiqueBDD::kToken_use_5F_and_5F_ite, -1, // Choice 6
C_Lexique_lexiqueBDD::kToken_and_5F_cache, -1, // Choice 7
C_Lexique_lexiqueBDD::kToken_ite_5F_cache, -1, // Choice 8
C_Lexique_lexiqueBDD::kToken_map, -1, // Choice 9
C_Lexique_lexiqueBDD::kToken_bdd, -1, // Choice 10
C_Lexique_lexiqueBDD::kToken_display, -1, // Choice 11
C_Lexique_lexiqueBDD::kToken_dump, -1, // Choice 12
C_Lexique_lexiqueBDD::kToken_verify, -1, // Choice 13
C_Lexique_lexiqueBDD::kToken__23_, -1, // Choice 14
  -1,
// At index 73 : <select_syntaxeBDD_1>
C_Lexique_lexiqueBDD::kToken_nombre, C_Lexique_lexiqueBDD::kToken_bool, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_record, -1, // Choice 2
C_Lexique_lexiqueBDD::kToken_id, -1, // Choice 3
  -1,
// At index 81 : <select_syntaxeBDD_2>
C_Lexique_lexiqueBDD::kToken_nombre, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_bool, -1, // Choice 2
  -1,
// At index 86 : <select_syntaxeBDD_3>
C_Lexique_lexiqueBDD::kToken__3B_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__5B_, -1, // Choice 2
  -1,
// At index 91 : <select_syntaxeBDD_4>
C_Lexique_lexiqueBDD::kToken_end, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_id, -1, // Choice 2
  -1,
// At index 96 : <select_syntaxeBDD_5>
C_Lexique_lexiqueBDD::kToken__3A__3D_, C_Lexique_lexiqueBDD::kToken__2B__3D_, C_Lexique_lexiqueBDD::kToken__2D__3D_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__5B_, -1, // Choice 2
  -1,
// At index 103 : <select_syntaxeBDD_6>
C_Lexique_lexiqueBDD::kToken_id, C_Lexique_lexiqueBDD::kToken__23_, C_Lexique_lexiqueBDD::kToken__5D_, C_Lexique_lexiqueBDD::kToken__28_, C_Lexique_lexiqueBDD::kToken_true, C_Lexique_lexiqueBDD::kToken__7B_, C_Lexique_lexiqueBDD::kToken_false, C_Lexique_lexiqueBDD::kToken__7E_, C_Lexique_lexiqueBDD::kToken_if, C_Lexique_lexiqueBDD::kToken__21_, C_Lexique_lexiqueBDD::kToken__3F_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__2C_, -1, // Choice 2
  -1,
// At index 118 : <select_syntaxeBDD_7>
C_Lexique_lexiqueBDD::kToken_bool, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_id, -1, // Choice 2
  -1,
// At index 123 : <select_syntaxeBDD_8>
C_Lexique_lexiqueBDD::kToken_id, C_Lexique_lexiqueBDD::kToken__23_, C_Lexique_lexiqueBDD::kToken__5D_, C_Lexique_lexiqueBDD::kToken__2C_, C_Lexique_lexiqueBDD::kToken__28_, C_Lexique_lexiqueBDD::kToken_true, C_Lexique_lexiqueBDD::kToken__7B_, C_Lexique_lexiqueBDD::kToken_false, C_Lexique_lexiqueBDD::kToken__7E_, C_Lexique_lexiqueBDD::kToken_if, C_Lexique_lexiqueBDD::kToken__21_, C_Lexique_lexiqueBDD::kToken__3F_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__5B_, -1, // Choice 2
  -1,
// At index 139 : <select_syntaxeBDD_9>
C_Lexique_lexiqueBDD::kToken__3B_, C_Lexique_lexiqueBDD::kToken_end, C_Lexique_lexiqueBDD::kToken__29_, C_Lexique_lexiqueBDD::kToken_then, C_Lexique_lexiqueBDD::kToken_else, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken_comp, -1, // Choice 2
C_Lexique_lexiqueBDD::kToken__2D__3E_, -1, // Choice 3
  -1,
// At index 150 : <select_syntaxeBDD_10>
C_Lexique_lexiqueBDD::kToken__3B_, C_Lexique_lexiqueBDD::kToken_end, C_Lexique_lexiqueBDD::kToken_comp, C_Lexique_lexiqueBDD::kToken__2D__3E_, C_Lexique_lexiqueBDD::kToken__29_, C_Lexique_lexiqueBDD::kToken_then, C_Lexique_lexiqueBDD::kToken_else, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__7C_, -1, // Choice 2
  -1,
// At index 161 : <select_syntaxeBDD_11>
C_Lexique_lexiqueBDD::kToken__3B_, C_Lexique_lexiqueBDD::kToken_end, C_Lexique_lexiqueBDD::kToken_comp, C_Lexique_lexiqueBDD::kToken__2D__3E_, C_Lexique_lexiqueBDD::kToken__7C_, C_Lexique_lexiqueBDD::kToken__29_, C_Lexique_lexiqueBDD::kToken_then, C_Lexique_lexiqueBDD::kToken_else, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__26_, -1, // Choice 2
  -1,
// At index 173 : <select_syntaxeBDD_12>
C_Lexique_lexiqueBDD::kToken__5D_, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__2C_, -1, // Choice 2
  -1,
// At index 178 : <select_syntaxeBDD_13>
C_Lexique_lexiqueBDD::kToken__3B_, C_Lexique_lexiqueBDD::kToken_end, C_Lexique_lexiqueBDD::kToken__5D_, C_Lexique_lexiqueBDD::kToken__2C_, C_Lexique_lexiqueBDD::kToken_comp, C_Lexique_lexiqueBDD::kToken__2D__3E_, C_Lexique_lexiqueBDD::kToken__7C_, C_Lexique_lexiqueBDD::kToken__26_, C_Lexique_lexiqueBDD::kToken__29_, C_Lexique_lexiqueBDD::kToken__7D_, C_Lexique_lexiqueBDD::kToken_then, C_Lexique_lexiqueBDD::kToken_else, -1, // Choice 1
C_Lexique_lexiqueBDD::kToken__2E_, -1, // Choice 2
  -1,
// At index 194 : <> only one production, no choice
  -1,
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//       L L ( 1 )    D E C I S I O N    T A B L E S    I N D E X E S        *
//                                                                           *
//---------------------------------------------------------------------------*

static const PMSInt16 gDecisionIndexes [30] = {
0, // at 0 : <axiomeBDD>
1, // at 1 : <domainDefinition>
2, // at 2 : <formule>
3, // at 3 : <type_formule>
10, // at 4 : <egalite_formule>
11, // at 5 : <facteur_formule>
32, // at 6 : <terme_formule>
33, // at 7 : <dimension>
34, // at 8 : <comparaisonVariable>
39, // at 9 : <analyserFormule>
40, // at 10 : <argsFormelsFormule>
41, // at 11 : <declarations>
42, // at 12 : <parse_scalar_argument>
43, // at 13 : <parse_argument>
44, // at 14 : <select_syntaxeBDD_0>
73, // at 15 : <select_syntaxeBDD_1>
81, // at 16 : <select_syntaxeBDD_2>
86, // at 17 : <select_syntaxeBDD_3>
91, // at 18 : <select_syntaxeBDD_4>
96, // at 19 : <select_syntaxeBDD_5>
103, // at 20 : <select_syntaxeBDD_6>
118, // at 21 : <select_syntaxeBDD_7>
123, // at 22 : <select_syntaxeBDD_8>
139, // at 23 : <select_syntaxeBDD_9>
150, // at 24 : <select_syntaxeBDD_10>
161, // at 25 : <select_syntaxeBDD_11>
173, // at 26 : <select_syntaxeBDD_12>
178, // at 27 : <select_syntaxeBDD_13>
194, // at 28 : <>
0} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 'axiomeBDD' non terminal implementation                   *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_axiomeBDD_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableFormules & parameter_1,
                                GGS_typeListeCalculs & parameter_2,
                                GGS_typeDomainMap & parameter_3) {
  rule_syntaxeBDD_axiomeBDD_i0_(inLexique, parameter_1, parameter_2, parameter_3) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                   Grammar start symbol implementation                     *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::_performSourceFileParsing_ (C_CompilerEx & inCompiler,
                                const C_String & inDependancyExtension,
                                const C_String & inDependancyPath,
                                GGS_string * inSentStringPtr,
                                const GGS_lstring inFilePath,
                                GGS_typeTableFormules & parameter_1,
                                GGS_typeListeCalculs & parameter_2,
                                GGS_typeDomainMap & parameter_3
                                COMMA_LOCATION_ARGS) {
  const C_String sourceFileName = inFilePath.string ().isAbsolutePath ()
    ? inFilePath.string ()
    : inCompiler.sourceFileName ().stringByDeletingLastPathComponent ().stringByAppendingPathComponent (inFilePath.string ()) ;
  if (sourceFileName.fileExists ()) {
    C_Lexique_lexiqueBDD * scanner = NULL ;
    macroMyNew (scanner, C_Lexique_lexiqueBDD (& inCompiler, inDependancyExtension, inDependancyPath, inCompiler.ioParametersPtr (), sourceFileName COMMA_HERE)) ;
    if (scanner->needsCompiling ()) {
      if (scanner->sourceText () != NULL) {
        scanner->mPerformGeneration = inCompiler.mPerformGeneration ;
        const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                         gFirstProductionIndexes, gDecision, gDecisionIndexes, 236) ;
        if (ok && ! scanner->mParseOnlyFlag) {
          C_Grammar_grammaireBDD _grammar ;
          _grammar.nt_axiomeBDD_ (*scanner, parameter_1, parameter_2, parameter_3) ;
          if (inSentStringPtr != NULL) {
            inSentStringPtr->dotAssign_operation (scanner->sentStringEX ()) ;
          }
        }
      }else{
        C_String message ;
        message << "the '" << sourceFileName << "' file exits, but cannot be read" ;
        inFilePath.signalSemanticError (inCompiler, message COMMA_THERE) ;
      }
    }
    macroReleaseObject (scanner) ;
  }else{
    C_String message ;
    message << "the '" << sourceFileName << "' file does not exist" ;
    inFilePath.signalSemanticError (inCompiler, message COMMA_THERE) ;
  }
}

//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::_performSourceStringParsing_ (C_CompilerEx & inCompiler,
                                GGS_string * inSentStringPtr,
                                const GGS_string inSourceString,
                                GGS_typeTableFormules & parameter_1,
                                GGS_typeListeCalculs & parameter_2,
                                GGS_typeDomainMap & parameter_3
                                COMMA_UNUSED_LOCATION_ARGS) {
  C_Lexique_lexiqueBDD * scanner = NULL ;
  macroMyNew (scanner, C_Lexique_lexiqueBDD (& inCompiler, inCompiler.ioParametersPtr (), inSourceString.string (), "Error when parsing dynamic string" COMMA_HERE)) ;
  scanner->mPerformGeneration = inCompiler.mPerformGeneration ;
  const bool ok = scanner->performTopDownParsing (gProductions, gProductionNames, gProductionIndexes,
                                                   gFirstProductionIndexes, gDecision, gDecisionIndexes, 236) ;
  if (ok && ! scanner->mParseOnlyFlag) {
    C_Grammar_grammaireBDD _grammar ;
    _grammar.nt_axiomeBDD_ (*scanner, parameter_1, parameter_2, parameter_3) ;
    if (inSentStringPtr != NULL) {
      inSentStringPtr->dotAssign_operation (scanner->sentStringEX ()) ;
    }
  }
  macroReleaseObject (scanner) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              'domainDefinition' non terminal implementation               *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_domainDefinition_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeDomainMap & parameter_1,
                                GGS_typeDomain & parameter_2) {
  rule_syntaxeBDD_domainDefinition_i1_(inLexique, parameter_1, parameter_2) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                  'formule' non terminal implementation                    *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_formule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool parameter_1,
                                GGS_uint parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeTableFormules & parameter_4,
                                GGS_typeFormule & parameter_5) {
  rule_syntaxeBDD_formule_i9_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                'type_formule' non terminal implementation                 *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_type_5F_formule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool parameter_1,
                                GGS_uint parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeTableFormules & parameter_4,
                                GGS_lstring parameter_5,
                                GGS_typeFormalArgumentsList parameter_6,
                                GGS_luint parameter_7,
                                GGS_typeCalcul & parameter_8) {
  switch (inLexique.nextProductionIndex ()) {
  case 1 :
    rule_syntaxeBDD_type_5F_formule_i6_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7, parameter_8) ;
    break ;
  case 2 :
    rule_syntaxeBDD_type_5F_formule_i7_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7, parameter_8) ;
    break ;
  case 3 :
    rule_syntaxeBDD_type_5F_formule_i8_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7, parameter_8) ;
    break ;
  default :
    break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              'egalite_formule' non terminal implementation                *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_egalite_5F_formule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool parameter_1,
                                GGS_uint parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeTableFormules & parameter_4,
                                GGS_typeFormule & parameter_5) {
  rule_syntaxeBDD_egalite_5F_formule_i10_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              'facteur_formule' non terminal implementation                *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_facteur_5F_formule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool parameter_1,
                                GGS_uint parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeTableFormules & parameter_4,
                                GGS_typeFormule & parameter_5) {
  switch (inLexique.nextProductionIndex ()) {
  case 1 :
    rule_syntaxeBDD_facteur_5F_formule_i12_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 2 :
    rule_syntaxeBDD_facteur_5F_formule_i13_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 3 :
    rule_syntaxeBDD_facteur_5F_formule_i14_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 4 :
    rule_syntaxeBDD_facteur_5F_formule_i17_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 5 :
    rule_syntaxeBDD_facteur_5F_formule_i18_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 6 :
    rule_syntaxeBDD_facteur_5F_formule_i19_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 7 :
    rule_syntaxeBDD_facteur_5F_formule_i20_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 8 :
    rule_syntaxeBDD_facteur_5F_formule_i21_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 9 :
    rule_syntaxeBDD_facteur_5F_formule_i22_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  case 10 :
    rule_syntaxeBDD_facteur_5F_formule_i23_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
    break ;
  default :
    break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//               'terme_formule' non terminal implementation                 *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_terme_5F_formule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool parameter_1,
                                GGS_uint parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeTableFormules & parameter_4,
                                GGS_typeFormule & parameter_5) {
  rule_syntaxeBDD_terme_5F_formule_i11_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 'dimension' non terminal implementation                   *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_dimension_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeDomainMap & parameter_1,
                                GGS_typeDomain & parameter_2) {
  rule_syntaxeBDD_dimension_i5_(inLexique, parameter_1, parameter_2) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            'comparaisonVariable' non terminal implementation              *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_comparaisonVariable_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool parameter_1,
                                GGS_luint parameter_2,
                                GGS_luint parameter_3,
                                GGS_luint parameter_4,
                                GGS_luint parameter_5,
                                GGS_luint parameter_6,
                                GGS_typeFormule & parameter_7) {
  switch (inLexique.nextProductionIndex ()) {
  case 1 :
    rule_syntaxeBDD_comparaisonVariable_i15_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7) ;
    break ;
  case 2 :
    rule_syntaxeBDD_comparaisonVariable_i16_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6, parameter_7) ;
    break ;
  default :
    break ;
  }
}

//---------------------------------------------------------------------------*
//                                                                           *
//              'analyserFormule' non terminal implementation                *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_analyserFormule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableFormules & parameter_1,
                                GGS_typeDomainMap & parameter_2,
                                GGS_typeListeCalculs & parameter_3,
                                GGS_luint parameter_4) {
  rule_syntaxeBDD_analyserFormule_i2_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             'argsFormelsFormule' non terminal implementation              *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_argsFormelsFormule_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool & parameter_1,
                                GGS_uint & parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeFormalArgumentsList & parameter_4) {
  rule_syntaxeBDD_argsFormelsFormule_i3_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                'declarations' non terminal implementation                 *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_declarations_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool & parameter_1,
                                GGS_uint & parameter_2,
                                GGS_typeDomainMap & parameter_3,
                                GGS_typeFormalArgumentsList & parameter_4) {
  rule_syntaxeBDD_declarations_i4_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           'parse_scalar_argument' non terminal implementation             *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_parse_5F_scalar_5F_argument_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool & parameter_1,
                                GGS_luint & parameter_2,
                                GGS_luint & parameter_3,
                                GGS_luint & parameter_4,
                                GGS_luint & parameter_5,
                                GGS_location & parameter_6) {
  rule_syntaxeBDD_parse_5F_scalar_5F_argument_i25_(inLexique, parameter_1, parameter_2, parameter_3, parameter_4, parameter_5, parameter_6) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               'parse_argument' non terminal implementation                *
//                                                                           *
//---------------------------------------------------------------------------*

void C_Grammar_grammaireBDD::
nt_parse_5F_argument_ (C_Lexique_lexiqueBDD & inLexique,
                                GGS_typeTableVariablesBool & parameter_1,
                                GGS_typeVariableDescriptor & parameter_2,
                                GGS_location & parameter_3) {
  rule_syntaxeBDD_parse_5F_argument_i24_(inLexique, parameter_1, parameter_2, parameter_3) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_0' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_0 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_1' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_1 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_2' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_2 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_3' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_3 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_4' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_4 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_5' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_5 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_6' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_6 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_7' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_7 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_8' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_8 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_9' added non terminal implementation           *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_9 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_10' added non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_10 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_11' added non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_11 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_12' added non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_12 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         'select_syntaxeBDD_13' added non terminal implementation          *
//                                                                           *
//---------------------------------------------------------------------------*

PMSInt16 C_Grammar_grammaireBDD::select_syntaxeBDD_13 (C_Lexique_lexiqueBDD & inLexique) {
  return inLexique.nextProductionIndex () ;
}

//---------------------------------------------------------------------------*

