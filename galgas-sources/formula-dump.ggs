#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    AST                                                                                                                
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class @dumpFormula : @abstractFormula {
  public var @lstring mFormulaName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    SYNTAX                                                                                                             
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension kerbdd_syntax {

#·······················································································································

  rule <topLevelDeClaration>( ?!@ast ioAST) {
    $dump$
    $identifier$( ?let formulaName)
    $;$
    ioAST.mFormulaList += !@dumpFormula.new (!formulaName)
  }

#·······················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    ANALYZE FORMULA                                                                                                    
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @dumpFormula analyzeFormula( 
  ?let @string unused inSourceFilePath
  ?let @domainMap unused inDomainMap
  ?!@computedFormulaMap ioComputedFormulaMap)
{
  [ioComputedFormulaMap searchKey !self.mFormulaName ?let @varList varList ?let bitCount ?let result]
  let @uint64 valueCount = [result valueCount !bitCount]
  message "Dump $" + self.mFormulaName + " (" + valueCount + " value" + if valueCount > 1 then "s" else "" end + ")\n"
  var @stringlist nameList = {}
  var @uintlist bitCountList = {}
  for (mVarName * mBitCount) in varList do
    nameList += !mVarName
    bitCountList += !mBitCount
  end
  message [result print !nameList !bitCountList]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
