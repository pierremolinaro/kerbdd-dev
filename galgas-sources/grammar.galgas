#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    GRAMMAR                                                                                                            
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

grammar kerbdd_grammar "LL1" {
  syntax kerbdd_syntax
  <start_symbol> !@ast outAST
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    AST                                                                                                                
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct @ast {
  @formulaList mFormulaList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#    SYNTAX                                                                                                             
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax kerbdd_syntax (kerbdd_lexique) {

#·······················································································································

rule <start_symbol> !@ast outAST {
  outAST = .default
  repeat
  while
    <topLevelDeClaration> !?outAST
  end
}

#·······················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————