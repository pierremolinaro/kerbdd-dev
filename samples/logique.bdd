dump #S1 [f : bool, g : bool, h : bool] := f & g & h ;
dump #S2 [f : bool, g : bool, h : bool] := ~ ((~f) | (~g) | (~h)) ;
dump #S3 [f : bool, g : bool, h : bool] := #S1 [f, g, h] = #S2 [f, g, h] ;
dump #S4 [f : bool, g : bool, h : bool] := #S1 [f, g, h] <> #S2 [f, g, h] ;
dump #S5 [f : bool, g : bool] := ?h : bool #S1 [f, g, h] ;
dump #Test1 [a:bool] := a ;
dump #Test2 [a:bool] := ~a ;
dump #Test3 [a:bool, b:bool] := a ;
dump #Test4 [a:bool, b:bool] := a & b ;
dump #Test5 [a:bool, b:bool] := a = b ;
dump #Test6 [a:bool, b:bool, c:bool] := if a then b else c end ;
dump #testImplique [x:bool, y:bool] := (x -> y) = (~x | y) ;
dump #testIte [x:bool, y:bool, z:bool] := (if x then y else z end) = ((x & y) | (~x & z)) ;
verify #ex [x:bool [14]] := {x < 8236} ;
dump #F [x0:bool, x1:bool, x2:bool, x3:bool] := x3 & x2 ;
dump #G [x0:bool, x1:bool, x2:bool, x3:bool] := (~x3 & x1) | x3 ;
dump #H [x0:bool, x1:bool, x2:bool, x3:bool] := x2 & x0 ;
dump #ite [x0:bool, x1:bool, x2:bool, x3:bool] :=
   if #F [x0, x1, x2, x3] then #G [x0, x1, x2, x3] else #H  [x0, x1, x2, x3] end ;
end
