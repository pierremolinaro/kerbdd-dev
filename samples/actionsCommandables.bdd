$--- Ensemble des transitions du premier automate
#Trans1 [qs:bool[2], t:bool[2], qd:bool[2]] :=
 ({qs=0} & {t=0} & {qd=1}) | ({qs=1} & {t=1} & {qd=2}) |
 ({qs=2} & {t=2} & {qd=3}) | ({qs=qd} & {t=3}) ;

$--- Ensemble des transitions du second automate
#Trans2 [qs:bool[2], u:bool[2], qd:bool[2]] := #Trans1 [qs, u, qd] ;

$---- Vecteur de synchronisation
display #vecteurSynchro [t:bool[2], u:bool[2]] := ({t=3} | {u=3}) & {t<>u} ;

$------------------ Produit des deux automates ------------------------
#Trans [qs:bool[4], tu:bool[4], qd:bool[4]] :=
 #vecteurSynchro [tu:2::0, tu:2::2] &
 #Trans1 [qs:2::0, tu:2::0, qd:2::0] 
 #Trans2 [qs:2::2, tu:2::2, qd:2::2] ;

$--- L'ensemble des etats interdits (état (2,2))
#EtatInterdit [qs:bool[4]] := {qs:2::0 = 2} & {qs:2::2 = 2} ;

$--- L'ensemble des actions non commandables (1, 3) et (3, 1)
#NonCommandable [tu:bool[4]] :=
          ({tu:2::0 = 1} & {tu:2::2 = 3}) | ({tu:2::0 = 3} & {tu:2::2 = 1}) ;

$--- Calcul par plus petit point fixe de l'ensemble des etats a supprimer
#Supprimer [q:bool[4]] += #EtatInterdit [q] |
   ?ab:bool[4], qd:bool[4] (#Trans [q, ab, qd] & #NonCommandable [ab] & #Supprimer [qd]) ;

$--- Systeme final
display #TransFinal [qs:bool[4], tu:bool[4], qd:bool[4]] :=
            #Trans [qs, tu, qd] & ~#Supprimer [qs] & ~#Supprimer [qd] ;

#Initial [q:bool[4]] := {q=0} ;

$--- Calcul de la partie accessible du systeme final
display #Acces [q:bool[4]] += ~#Supprimer [q] &
              (#Initial [q] | ? qt:bool[4],tu:bool[4] (#Acces [qt] & #Trans [qt, tu, q])) ;

end
