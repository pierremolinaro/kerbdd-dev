$ 25 octobre 2003

$---- Les modes
display #mode_repos [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := (~fmc) & (~fpv) & (~fgv) & ((~t) | fa) ;

display #mode_vitesse_1 [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := fpv & (~fgv) & (~t) ;

display #mode_vitesse_2 [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := fgv ;

display #mode_transitoire [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := (~fgv) & t & (~fa);

display #mode_terminaison_cycle [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := (~fmc) & (~fpv) & (~fgv) & (~fa) & (~t) ;

display #mode_cadence_marche [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := (fmc) & (~fpv) & (~fgv) & (~t) & tmc ;

display #mode_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool]  := (fmc) & (~fpv) & (~fgv) & (~t) & (~tmc) ;

$--- Leur intersection est vide
display #repos_ET_vitesse_1 [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_repos [fmc, fpv, fgv, t, tmc, fa] & #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] ;

display #repos_ET_vitesse_2 [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_repos [fmc, fpv, fgv, t, tmc, fa] & #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] ;

display #repos_ET_transitoire [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_repos [fmc, fpv, fgv, t, tmc, fa] & #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] ;

display #repos_ET_terminaison_cycle [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_repos [fmc, fpv, fgv, t, tmc, fa] & #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] ;

display #repos_ET_cadence_marche [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_repos [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] ;

display #repos_ET_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_repos [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;


display #vitesse_1_ET_vitesse_2 [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] & #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_1_ET_transitoire [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] & #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_1_ET_terminaison_cycle [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] & #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_1_ET_cadence_marche [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_1_ET_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;


display #vitesse_2_ET_transitoire [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] & #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_2_ET_terminaison_cycle [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] & #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_2_ET_cadence_marche [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] ;

display #vitesse_2_ET_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;


display #transitoire_ET_terminaison_cycle [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] & #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] ;

display #transitoire_ET_cadence_marche [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] ;

display #transitoire_ET_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;


display #terminaison_cycle_ET_cadence_marche [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] ;

display #terminaison_cycle_ET_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;


display #cadence_marche_ET_cadence_arret [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
          #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] & #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;


$--- Leur union donne tout l'ensemble
display #union_des_modes [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
    #mode_repos [fmc, fpv, fgv, t, tmc, fa] |
    #mode_vitesse_1 [fmc, fpv, fgv, t, tmc, fa] |
    #mode_vitesse_2 [fmc, fpv, fgv, t, tmc, fa] |
    #mode_transitoire [fmc, fpv, fgv, t, tmc, fa] |
    #mode_terminaison_cycle [fmc, fpv, fgv, t, tmc, fa] |
    #mode_cadence_marche [fmc, fpv, fgv, t, tmc, fa] |
    #mode_cadence_arret [fmc, fpv, fgv, t, tmc, fa] ;

display #valeur_oubliee [fmc:bool, fpv:bool, fgv:bool, t:bool, tmc:bool, fa:bool] :=
    ~ #union_des_modes [fmc, fpv, fgv, t, tmc, fa] ;

end
