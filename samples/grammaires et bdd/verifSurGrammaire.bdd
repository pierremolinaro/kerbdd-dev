$--------------------------------------------------------------*$                                                              *$    Vérifications élémentaires sur une grammaire              *$                                                              *$--------------------------------------------------------------*$--- Vérifier que le membre gauche est un non terminal (doit être VRAI)#VERIF := !ntg:NTT, y:NTT, z:NTT (#PRODUCTION [ntg, y, z]->#estNonTerminal [ntg]) ;$--------------------------------------------------------------*$----- Calcul de l'ensemble des terminaux et non-terminaux utiles#UTILE [v:NTT] += #AXIOME [v] |	?ntg:NTT (		#UTILE [ntg] & (			?v2:NTT (#PRODUCTION [ntg, v, v2] | #PRODUCTION [ntg, v2, v])		)	) ;$--------------------------------------------------------------*$--- Recherche des non-terminaux inutiles (doit être vide)#NT_INUTILE [nt:NTT] := #estNonTerminal [nt] & ~ #UTILE [nt] ;$--------------------------------------------------------------*$--- Recherche des terminaux inutiles (doit être vide)#T_INUTILE [t:NTT] := #estTerminal [t] & ~ #UTILE [t] ;$--------------------------------------------------------------*$- Calcul de l'ensemble des non-terminaux pouvant se dériver en vide#DERIVE_EN_VIDE [nt:NTT] +=    #PRODUCTION_VIDE [nt] |    ?x:NTT, y:NTT (#PRODUCTION [nt, x, y] & #DERIVE_EN_VIDE [x]                                          & #DERIVE_EN_VIDE [y]) ;$--------------------------------------------------------------*$- Calcul de l'ensemble des non-terminaux pouvant etre suivi du vide#SUIVI_DU_VIDE [nt:NTT] +=  #AXIOME [nt] |  ?ntg:NTT, y:NTT (#PRODUCTION [ntg, y, nt] & #SUIVI_DU_VIDE [ntg]) |  ?ntg:NTT, y:NTT (#PRODUCTION [ntg, nt, y] & #SUIVI_DU_VIDE [ntg]                                            & #DERIVE_EN_VIDE [y]) ;$--------------------------------------------------------------*$------- Calcul des LAST des terminaux et non terminaux ------------#LAST [u:NTT, s:NTT] := ?w:NTT #PRODUCTION [u, w, s] ;$--------------------------------------------------------------*$--- Fermeture transitive des LAST#FT_LAST [u:NTT, s:NTT] +=    #LAST [u, s] | ?x:NTT (#FT_LAST [u, x] & #FT_LAST [x, s]) ;$--------------------------------------------------------------*end